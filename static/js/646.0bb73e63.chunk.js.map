{"version":3,"file":"static/js/646.0bb73e63.chunk.js","mappings":"+OAGaA,EAAQC,EAAAA,EAAAA,GAAH,0QAWLC,EAAQD,EAAAA,EAAAA,MAAH,6FAMLE,EAAaF,EAAAA,EAAAA,KAAH,sGAMVG,GAAQH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,+UAoBLK,EAASL,EAAAA,EAAAA,OAAH,2kB,8BC9BnB,EAZqB,WACnB,IAAMM,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAOjB,MAAO,CAAEC,aALY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC7BN,EAASO,EAAAA,EAAAA,UAAqB,CAAEF,MAAAA,EAAOC,SAAAA,KACvCJ,EAAS,gB,oBC+Bb,EApCkB,WAChB,IAAQE,EAAiBI,IAAjBJ,aAER,OACE,iCACE,SAACX,EAAD,qBACA,SAAC,KAAD,CACEgB,cAAe,CAAEJ,MAAO,GAAIC,SAAU,IACtCI,SAAUN,EACVO,iBAAkBC,EAAAA,GAHpB,SAKG,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,aAAcC,EAAvC,EAAuCA,aAAvC,OACC,UAAC,KAAD,CAAMN,SAAUK,EAAhB,WACE,UAACpB,EAAD,YACE,SAACC,EAAD,6BACA,SAACC,EAAD,CAAOoB,KAAK,QAAQC,KAAK,QAAQC,SAAUL,EAAcM,MAAOP,EAAOR,SACvE,SAAC,KAAD,CAAca,KAAK,QAAQG,UAAU,YAEvC,UAAC1B,EAAD,YACE,SAACC,EAAD,wBACA,SAACC,EAAD,CACEoB,KAAK,WACLC,KAAK,WACLC,SAAUL,EACVM,MAAOP,EAAOP,YAEhB,SAAC,KAAD,CAAcY,KAAK,WAAWG,UAAU,YAE1C,SAACtB,EAAD,CAAQkB,KAAK,SAAb,SAAuBD,EAAe,MAAQ,oBCtB1D,EARkB,WAChB,OACE,SAACM,EAAA,EAAD,WACE,SAAC,EAAD,Q,oHCJOC,EAAgBC,EAAAA,GAAW,CACtCN,KAAMM,EAAAA,KAAaC,WAAWC,IAAI,GAAGC,IAAI,IACzCC,OAAQJ,EAAAA,KAAaC,aAGVb,EAAkBY,EAAAA,GAAW,CACxCnB,MAAOmB,EAAAA,KAAaC,WAAWpB,QAC/BC,SAAUkB,EAAAA,KAAaC,WAAWC,IAAI,GAAGC,IAAI,MAGlCE,EAAqBL,EAAAA,GAAW,CAC3CN,KAAMM,EAAAA,KAAaC,WAAWC,IAAI,GAAGC,IAAI,IACzCtB,MAAOmB,EAAAA,KAAaC,WAAWpB,QAC/BC,SAAUkB,EAAAA,KAAaC,WAAWC,IAAI,GAAGC,IAAI","sources":["components/LoginForm/LoginForm.styled.js","hooks/useLoginUser.js","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx","utilities/validationSchema.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const Title = styled.h2`\n  text-align: center;\n  font-size: 26px;\n  text-transform: uppercase;\n  font-weight: 700;\n  color: var(--main-text-color);\n  text-shadow: -1px -1px 1px rgba(255, 255, 255, 0.1), 1px 1px 1px rgba(0, 0, 0, 0.5);\n\n  margin-bottom: 10px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const TitleInput = styled.span`\n  font-weight: 600;\n  color: var(--main-text-color);\n  margin-bottom: 5px;\n`;\n\nexport const Input = styled(Field)`\n  height: 40px;\n  padding: 0 10px 0 10px;\n\n  border: 1px solid var(--second-bg-color);\n  outline: none;\n\n  color: var(--main-text-color);\n  font-size: 14px;\n\n  :focus {\n    border-color: var(--accent-bg-color);\n  }\n\n  ::placeholder {\n    font-size: 12px;\n    color: var(--main-text-color);\n  }\n`;\n\nexport const Button = styled.button`\n  margin: 0 auto;\n  box-shadow: inset 0px 1px 0px 0px #54a3f7;\n  background: linear-gradient(to bottom, #007dc1 5%, #0061a7 100%);\n  background-color: #007dc1;\n  border-radius: 3px;\n  border: 1px solid #124d77;\n  display: block;\n  cursor: pointer;\n  color: #ffffff;\n  font-family: Arial;\n  font-size: 13px;\n  padding: 6px 24px;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #154682;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background-color: var(--second-bg-color);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport operations from 'redux/auth/authOperations';\n\nconst useLoginUser = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const onSubmitForm = ({ email, password }) => {\n    dispatch(operations.loginUser({ email, password }));\n    navigate('/contacts');\n  };\n\n  return { onSubmitForm };\n};\n\nexport default useLoginUser;\n","import { Formik, Form, ErrorMessage } from 'formik';\nimport { Title, Label, TitleInput, Input, Button } from './LoginForm.styled';\nimport useLoginUser from 'hooks/useLoginUser';\nimport { userLoginSchema } from 'utilities/validationSchema';\n\nconst LoginForm = () => {\n  const { onSubmitForm } = useLoginUser();\n\n  return (\n    <>\n      <Title>Login</Title>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        onSubmit={onSubmitForm}\n        validationSchema={userLoginSchema}\n      >\n        {({ values, handleChange, handleSubmit, isSubmitting }) => (\n          <Form onSubmit={handleSubmit}>\n            <Label>\n              <TitleInput>E-mail adress</TitleInput>\n              <Input type=\"email\" name=\"email\" onChange={handleChange} value={values.email} />\n              <ErrorMessage name=\"email\" component=\"div\" />\n            </Label>\n            <Label>\n              <TitleInput>Password</TitleInput>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                onChange={handleChange}\n                value={values.password}\n              />\n              <ErrorMessage name=\"password\" component=\"div\" />\n            </Label>\n            <Button type=\"submit\">{isSubmitting ? '...' : 'Login'}</Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import Container from 'components/Container/Container';\nimport LoginForm from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <Container>\n      <LoginForm />\n    </Container>\n  );\n};\n\nexport default LoginPage;\n","import * as yup from 'yup';\n\nexport const contactSchema = yup.object({\n  name: yup.string().required().min(3).max(30),\n  number: yup.number().required(),\n});\n\nexport const userLoginSchema = yup.object({\n  email: yup.string().required().email(),\n  password: yup.string().required().min(7).max(14),\n});\n\nexport const userRegisterSchema = yup.object({\n  name: yup.string().required().min(3).max(30),\n  email: yup.string().required().email(),\n  password: yup.string().required().min(7).max(14),\n});\n"],"names":["Title","styled","Label","TitleInput","Input","Field","Button","dispatch","useDispatch","navigate","useNavigate","onSubmitForm","email","password","operations","useLoginUser","initialValues","onSubmit","validationSchema","userLoginSchema","values","handleChange","handleSubmit","isSubmitting","type","name","onChange","value","component","Container","contactSchema","yup","required","min","max","number","userRegisterSchema"],"sourceRoot":""}