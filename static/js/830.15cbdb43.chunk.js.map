{"version":3,"file":"static/js/830.15cbdb43.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/GoBack/GoBack.styled.js","components/GoBack/GoBack.jsx","components/ContactForm/ContactForm.jsx","hooks/useCreateNewContact.js","pages/AddContactPage.jsx","utilities/validationSchema.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const TitlePage = styled.h2`\n  text-align: center;\n  margin-bottom: 10px;\n  text-transform: uppercase;\n  font-weight: 700;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.span`\n  font-weight: 600;\n  color: var(--main-text-color);\n  margin-bottom: 5px;\n`;\n\nexport const StyledField = styled(Field)`\n  background-color: #e9eaf7;\n  height: 40px;\n  padding: 0 10px 0 10px;\n\n  border: 1px solid var(--second-bg-color);\n  outline: none;\n\n  color: var(--main-text-color);\n  font-size: 14px;\n\n  :focus {\n    border-color: var(--accent-bg-color);\n  }\n\n  ::placeholder {\n    font-size: 12px;\n    color: var(--main-text-color);\n  }\n`;\n\nexport const Button = styled.button`\n  margin: 0 auto;\n  box-shadow: inset 0px 1px 0px 0px #54a3f7;\n  background: linear-gradient(to bottom, #007dc1 5%, #0061a7 100%);\n  background-color: #007dc1;\n  border-radius: 3px;\n  border: 1px solid #124d77;\n  display: block;\n  cursor: pointer;\n  color: #ffffff;\n  font-family: Arial;\n  font-size: 13px;\n  padding: 6px 24px;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #154682;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background: linear-gradient(to bottom, #0061a7 5%, #007dc1 100%);\n    background-color: #0061a7;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  box-shadow: inset 0px 1px 0px 0px #54a3f7;\n  background: linear-gradient(to bottom, #007dc1 5%, #0061a7 100%);\n  background-color: #007dc1;\n  border-radius: 3px;\n  border: 1px solid #124d77;\n  display: inline-block;\n  cursor: pointer;\n  color: #ffffff;\n  font-family: Arial;\n  font-size: 13px;\n  padding: 6px 24px;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #154682;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background: linear-gradient(to bottom, #0061a7 5%, #007dc1 100%);\n    background-color: #0061a7;\n  }\n`;\n\nexport const Label = styled.span`\n  margin-left: 10px;\n`;\n","import propTypes from 'prop-types';\nimport { FaLongArrowAltLeft } from 'react-icons/fa';\nimport { Button, Label } from './GoBack.styled';\nimport { useNavigate } from 'react-router-dom';\n\nconst GoBack = ({ text, path }) => {\n  const navigate = useNavigate();\n  const goToPage = () => navigate(path);\n\n  return (\n    <Button type=\"button\" onClick={goToPage}>\n      <FaLongArrowAltLeft />\n      <Label>{text}</Label>\n    </Button>\n  );\n};\n\nGoBack.prototype = {\n  label: propTypes.string,\n  path: propTypes.string,\n};\n\nexport default GoBack;\n","import propTypes from 'prop-types';\nimport { TitlePage, Label, Title, StyledField, Button } from './ContactForm.styled';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport GoBack from 'components/GoBack/GoBack';\n\nconst ContactForm = ({ title, initialValues, onSubmitForm, validationSchema, buttonLabel }) => {\n  return (\n    <>\n      <TitlePage>{title}</TitlePage>\n      <GoBack text=\"Contact list\" path=\"/contacts\" />\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmitForm}\n        validationSchema={validationSchema}\n      >\n        {({ values, handleChange, handleSubmit, isSubmitting }) => (\n          <Form onSubmit={handleSubmit}>\n            <Label>\n              <Title>Name</Title>\n              <StyledField type=\"text\" name=\"name\" onChange={handleChange} value={values.name} />\n              <ErrorMessage name=\"name\" component=\"div\" />\n            </Label>\n            <Label>\n              <Title>Number</Title>\n              <StyledField type=\"tel\" name=\"number\" onChange={handleChange} value={values.number} />\n              <ErrorMessage name=\"number\" component=\"div\" />\n            </Label>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? '...' : buttonLabel}\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nContactForm.prototype = {\n  title: propTypes.string,\n  initialValues: propTypes.shape({\n    name: propTypes.string,\n    number: propTypes.string,\n  }),\n  onSubmitForm: propTypes.func,\n  validationSchema: propTypes.shape({\n    name: propTypes.func,\n    number: propTypes.func,\n  }),\n  buttonLabel: propTypes.string,\n};\n\nexport default ContactForm;\n","import { useNavigate } from 'react-router-dom';\nimport { useCreateContactMutation, useGetContactsQuery } from 'redux/contacts/contactApi';\nimport { Report } from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst useCreateNewContact = data => {\n  const navigate = useNavigate();\n\n  const [createContact] = useCreateContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n\n  const onSubmitForm = data => {\n    contacts.some(contact => contact.name.toLowerCase() === data.name.toLowerCase())\n      ? Report.warning(`${data.name}`, 'This user is already in the contact list.', 'OK')\n      : createContact(data);\n\n    navigate('/contacts');\n\n    Notify.success(`The ${data.name} has been added to your contact list.`);\n  };\n\n  return onSubmitForm;\n};\n\nexport default useCreateNewContact;\n","import Container from 'components/Container/Container';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport useCreateNewContact from 'hooks/useCreateNewContact';\nimport { contactSchema } from 'utilities/validationSchema';\n\nconst AddContactPage = () => {\n  const initialValues = { name: '', number: '' };\n  const createNewContact = useCreateNewContact();\n\n  return (\n    <Container>\n      <ContactForm\n        title=\"Add new contact\"\n        initialValues={initialValues}\n        onSubmitForm={createNewContact}\n        validationSchema={contactSchema}\n        buttonLabel=\"Add contact\"\n      />\n    </Container>\n  );\n};\n\nexport default AddContactPage;\n","import * as yup from 'yup';\n\nexport const contactSchema = yup.object({\n  name: yup.string().required().min(3).max(30),\n  number: yup.number().required(),\n});\n\nexport const userLoginSchema = yup.object({\n  email: yup.string().required().email(),\n  password: yup.string().required().min(7).max(14),\n});\n\nexport const userRegisterSchema = yup.object({\n  name: yup.string().required().min(3).max(30),\n  email: yup.string().required().email(),\n  password: yup.string().required().min(7).max(14),\n});\n"],"names":["TitlePage","styled","Label","Title","StyledField","Field","Button","GoBack","text","path","navigate","useNavigate","type","onClick","prototype","label","propTypes","ContactForm","title","initialValues","onSubmitForm","validationSchema","buttonLabel","onSubmit","values","handleChange","handleSubmit","isSubmitting","name","onChange","value","component","number","disabled","data","useCreateContactMutation","createContact","contacts","useGetContactsQuery","some","contact","toLowerCase","Report","Notify","createNewContact","useCreateNewContact","Container","contactSchema","yup","required","min","max","userLoginSchema","email","password","userRegisterSchema"],"sourceRoot":""}