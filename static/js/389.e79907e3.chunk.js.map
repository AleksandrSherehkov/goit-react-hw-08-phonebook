{"version":3,"file":"static/js/389.e79907e3.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Contact/Contact.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","hooks/useShowModal.js","components/DeletingContact/DeletingContact.styled.js","hooks/useDeletingContact.js","components/DeletingContact/DeletingContact.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","hooks/useFiltredContacts.js","redux/contacts/contactSelectors.js","components/ContactList/ContactList.jsx","components/Message/Message.styled.js","components/Message/Message.jsx","components/AddButton/AddButton.styled.js","components/AddButton/AddButton.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin-bottom: 20px;\n`;\n\nexport const Text = styled.p`\n  font-weight: 600;\n  color: var(--main-text-color);\n  margin-bottom: 5px;\n`;\n\nexport const Input = styled.input`\n  width: 95%;\n  height: 40px;\n  padding: 0 10px 0 10px;\n  background-color: #e9eaf7;\n\n  border: 1px solid var(--second-bg-color);\n  outline: none;\n\n  color: var(--main-text-color);\n  font-size: 14px;\n\n  :focus {\n    border-color: var(--accent-bg-color);\n  }\n\n  ::placeholder {\n    font-size: 12px;\n    color: var(--main-text-color);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Label, Text, Input } from './Filter.styled';\nimport { changeFilter } from 'redux/contacts/contactsSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const changeFieldFilter = e => {\n    const value = e.currentTarget.value;\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <Label>\n      <Text>Find contacts by name</Text>\n      <Input type=\"text\" onChange={changeFieldFilter} name=\"filter\" />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\nimport { FaUser } from 'react-icons/fa';\n\nexport const Wrapper = styled.div`\n  background-color: #e9eaf7;\n  border-radius: 10px;\n  border: 1px solid #f2f2f2;\n\n  padding: 10px;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const NameWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const IconUser = styled(FaUser)`\n  background-color: var(--accent-bg-color);\n  color: var(--main-bg-color);\n\n  margin-right: 30px;\n  padding: 10px;\n`;\n\nexport const Name = styled.p`\n  font-size: 18px;\n  color: var(--main-text-color);\n`;\n\nexport const Number = styled.p`\n  text-align: center;\n`;\n\nexport const ButtonList = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n`;\n\nexport const ButtonItem = styled.li`\n  margin-right: 5px;\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 40px;\n  height: 30px;\n  padding: 10px;\n\n  border: none;\n  background-color: transparent;\n  color: var(--accent-bg-color);\n\n  cursor: pointer;\n  transition: color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    color: var(--second-bg-color);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100vw;\n  height: 100vh;\n\n  background-color: var(--backdrop-bg-color);\n`;\n\nexport const ModalWrapper = styled.div`\n  position: relative;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  width: 600px;\n  height: auto;\n  padding: 20px;\n\n  background-color: var(--main-bg-color);\n  color: var(--main-text-color);\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  border-bottom: 1px solid var(--accent-bg-color);\n\n  margin-bottom: 20px;\n  padding-bottom: 20px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 25px;\n  font-weight: 700;\n  text-transform: uppercase;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 30px;\n  height: 30px;\n\n  background-color: var(--second-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { Backdrop, ModalWrapper, Wrapper, Title, Button } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ children, onClose, title }) => {\n  useEffect(() => {\n    const onPessKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', onPessKeyDown);\n\n    return () => window.removeEventListener('keydown', onPessKeyDown);\n  }, [onClose]);\n\n  const onBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={onBackdropClick}>\n      <ModalWrapper>\n        <Wrapper>\n          <Title>{title}</Title>\n          <Button type=\"button\" onClick={onClose}>\n            <AiOutlineClose />\n          </Button>\n        </Wrapper>\n        {children}\n      </ModalWrapper>\n    </Backdrop>,\n    modalRoot\n  );\n};\n\nModal.prototype = {\n  children: PropTypes.element,\n  onClose: PropTypes.func.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Modal;\n","import { useState } from 'react';\n\nconst useShowModal = option => {\n  const [showModal, setShowModal] = useState(option);\n  const toggleModal = () => setShowModal(prevState => !prevState);\n\n  return { toggleModal, showModal };\n};\n\nexport default useShowModal;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  font-size: 20px;\n  margin-bottom: 30px;\n`;\n\nexport const Name = styled.span`\n  color: blue;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: right;\n`;\n\nexport const Item = styled.li`\n  margin-right: 10px;\n\n  :last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const ButtonCancel = styled.button`\n  box-shadow: inset 0px 1px 0px 0px #54a3f7;\n  background: linear-gradient(to bottom, #007dc1 5%, #0061a7 100%);\n  background-color: #007dc1;\n  border-radius: 3px;\n  border: 1px solid #124d77;\n  display: inline-block;\n  cursor: pointer;\n  color: #ffffff;\n  font-family: Arial;\n  font-size: 13px;\n  padding: 6px 24px;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #154682;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background: linear-gradient(to bottom, #0061a7 5%, #007dc1 100%);\n    background-color: #0061a7;\n  }\n`;\n\nexport const ButtonDelete = styled.button`\n  box-shadow: inset 0px 1px 0px 0px #54a3f7;\n  background: linear-gradient(to bottom, #007dc1 5%, #0061a7 100%);\n  background-color: #1007dc;\n  border-radius: 3px;\n  border: 1px solid #124d77;\n  display: inline-block;\n  cursor: pointer;\n  color: #f05d5d;\n  font-family: Arial;\n  font-size: 13px;\n  padding: 6px 24px;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #154682;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background: linear-gradient(to bottom, #0061a7 5%, #007dc1 100%);\n    background-color: #0061a7;\n  }\n`;\n","import { useNavigate } from 'react-router-dom';\nimport { useDeleteContactMutation } from 'redux/contacts/contactApi';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst useDeletingContact = (id, name, toggleModal) => {\n  const navigate = useNavigate();\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const deleteSelectedContact = () => {\n    deleteContact(id);\n    navigate('/contacts');\n    toggleModal();\n    Notify.success(`The ${name} has been removed from your contact list.`);\n  };\n\n  return { isDeleting, deleteSelectedContact };\n};\n\nexport default useDeletingContact;\n","import PropTypes from 'prop-types';\nimport { Text, Name, List, Item, ButtonCancel, ButtonDelete } from './DeletingContact.styled';\nimport useDeletingContact from 'hooks/useDeletingContact';\n\nconst DeletingContact = ({ id, name, toggleModal }) => {\n  const { isDeleting, deleteSelectedContact } = useDeletingContact(id, name, toggleModal);\n\n  return (\n    <>\n      <Text>\n        Are you sure you want to delete a contact <Name>{name}</Name>?\n      </Text>\n      <List>\n        <Item>\n          <ButtonCancel type=\"button\" onClick={toggleModal}>\n            Cancel\n          </ButtonCancel>\n        </Item>\n        <Item>\n          <ButtonDelete type=\"button\" onClick={deleteSelectedContact}>\n            {isDeleting ? '...' : 'Delete'}\n          </ButtonDelete>\n        </Item>\n      </List>\n    </>\n  );\n};\n\nDeletingContact.prototype = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  togleModal: PropTypes.func.isRequired,\n};\n\nexport default DeletingContact;\n","import PropTypes from 'prop-types';\nimport { FaTrash, FaUserEdit } from 'react-icons/fa';\nimport {\n  Wrapper,\n  NameWrapper,\n  IconUser,\n  Name,\n  Number,\n  ButtonList,\n  ButtonItem,\n  Button,\n} from './Contact.styled';\nimport Modal from 'components/Modal/Modal';\nimport useShowModal from 'hooks/useShowModal';\nimport DeletingContact from 'components/DeletingContact/DeletingContact';\nimport { useNavigate } from 'react-router-dom';\n\nconst Contact = ({ id, name, number }) => {\n  const { showModal, toggleModal } = useShowModal(false);\n  const navigate = useNavigate();\n\n  return (\n    <>\n      {showModal && (\n        <Modal onClose={toggleModal} title={name}>\n          <DeletingContact id={id} name={name} toggleModal={toggleModal} />\n        </Modal>\n      )}\n\n      <Wrapper>\n        <NameWrapper>\n          <IconUser />\n          <Name>{name}</Name>\n        </NameWrapper>\n\n        <Number>{number}</Number>\n\n        <ButtonList>\n          <ButtonItem>\n            <Button type=\"button\" onClick={toggleModal}>\n              <FaTrash />\n            </Button>\n          </ButtonItem>\n          <ButtonItem>\n            <Button type=\"button\" onClick={() => navigate(`edit/${id}`)}>\n              <FaUserEdit />\n            </Button>\n          </ButtonItem>\n        </ButtonList>\n      </Wrapper>\n    </>\n  );\n};\n\nContact.prototype = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default Contact;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul``;\n\nexport const Item = styled.li`\n  margin-bottom: 20px;\n`;\n","import { useGetContactsQuery } from 'redux/contacts/contactApi';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/contactSelectors';\n\nconst useFiltredContacts = () => {\n  const { data: contacts } = useGetContactsQuery();\n  const { filter } = useSelector(state => getFilter(state));\n\n  const filtredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return (\n      contacts && contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n    );\n  };\n\n  const filteredContactList = filtredContacts();\n\n  return { filteredContactList };\n};\n\nexport default useFiltredContacts;\n","export const getFilter = state => state.contacts;\n","import Contact from 'components/Contact/Contact';\nimport Loader from 'components/Loader/Loader';\nimport NotFound from 'components/NotFound/NotFound';\nimport { List, Item } from './ContactList.styled';\nimport { useGetContactsQuery } from 'redux/contacts/contactApi';\nimport useFiltredContacts from 'hooks/useFiltredContacts';\nimport { useEffect } from 'react';\n\nconst ContactList = () => {\n  const { data: contacts, isFetching, error, refetch } = useGetContactsQuery();\n  const { filteredContactList } = useFiltredContacts();\n\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n\n  return (\n    <>\n      {isFetching && <Loader />}\n      {error && <NotFound data={error.data} status={error.status} />}\n      <List>\n        {contacts &&\n          filteredContactList.map(({ id, name, number }) => {\n            return (\n              <Item key={id}>\n                <Contact id={id} name={name} number={number} />\n              </Item>\n            );\n          })}\n      </List>\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n\nexport const Text = styled.p`\n  font-weight: 600;\n  font-size: 25px;\n`;\n","import propTypes from 'prop-types';\nimport { Wrapper, Text } from './Message.styled';\n\nconst Message = ({ message }) => {\n  return (\n    <Wrapper>\n      <Text>{message}</Text>\n    </Wrapper>\n  );\n};\n\nMessage.prototype = {\n  message: propTypes.string,\n};\n\nexport default Message;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Button = styled(Link)`\n  box-shadow: inset 0px 1px 0px 0px #54a3f7;\n  background: linear-gradient(to bottom, #007dc1 5%, #0061a7 100%);\n  background-color: #007dc1;\n  border-radius: 3px;\n  border: 1px solid #124d77;\n  display: inline-block;\n  cursor: pointer;\n  color: #ffffff;\n  font-family: Arial;\n  font-size: 13px;\n  padding: 6px 24px;\n  text-decoration: none;\n  text-shadow: 0px 1px 0px #154682;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background: linear-gradient(to bottom, #0061a7 5%, #007dc1 100%);\n    background-color: #0061a7;\n  }\n`;\n\nexport const ButtonText = styled.span`\n  margin-right: 10px;\n`;\n","import { Button, ButtonText } from './AddButton.styled';\nimport { BsFillPersonPlusFill } from 'react-icons/bs';\nimport propTypes from 'prop-types';\n\nconst AddButton = ({ text }) => {\n  return (\n    <Button to=\"/contacts/add\">\n      <ButtonText>{text}</ButtonText>\n      <BsFillPersonPlusFill size={20} />\n    </Button>\n  );\n};\n\nAddButton.prototype = {\n  text: propTypes.string,\n};\n\nexport default AddButton;\n","import Container from 'components/Container/Container';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport Message from 'components/Message/Message';\nimport { useGetContactsQuery } from 'redux/contacts/contactApi';\nimport AddButton from 'components/AddButton/AddButton';\n\nconst ContactsPage = () => {\n  const { data: contacts } = useGetContactsQuery();\n\n  return (\n    <Container title=\"Contacts\">\n      <AddButton text=\"Add new contact\" />\n      <Filter />\n      {contacts && contacts.length > 0 ? (\n        <ContactList />\n      ) : (\n        <Message message=\"Contact list is empty.\" />\n      )}\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Label","styled","Text","Input","dispatch","useDispatch","type","onChange","e","value","currentTarget","changeFilter","name","Wrapper","NameWrapper","IconUser","FaUser","Name","Number","ButtonList","ButtonItem","Button","Backdrop","ModalWrapper","Title","modalRoot","document","querySelector","Modal","children","onClose","title","useEffect","onPessKeyDown","code","window","addEventListener","removeEventListener","createPortal","onClick","target","prototype","PropTypes","option","useState","showModal","setShowModal","toggleModal","prevState","List","Item","ButtonCancel","ButtonDelete","id","navigate","useNavigate","useDeleteContactMutation","deleteContact","isDeleting","isLoading","deleteSelectedContact","Notify","DeletingContact","useDeletingContact","togleModal","Contact","number","useShowModal","contacts","useGetContactsQuery","data","filter","useSelector","state","getFilter","filteredContactList","normalizedFilter","toLowerCase","contact","includes","filtredContacts","isFetching","error","refetch","useFiltredContacts","Loader","NotFound","status","map","Message","message","propTypes","Link","ButtonText","AddButton","text","to","size","Container","length"],"sourceRoot":""}